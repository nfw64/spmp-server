package spms

import kotlinx.cinterop.ByteVar
import kotlinx.cinterop.ExperimentalForeignApi
import kotlinx.cinterop.CValuesRef
import libzmq.zmq_poller_wait
import platform.posix.*

fun canOpenProcess(): Boolean = true

@OptIn(ExperimentalForeignApi::class)
fun openProcess(command: String, modes: String) { popen(command, modes) }

fun canEndProcess(): Boolean = true
fun endProcess() { kill(0, SIGTERM) }

@OptIn(ExperimentalForeignApi::class)
fun zmqPollerWait(poller: CValuesRef<*>?, event: CValuesRef<libzmq.zmq_poller_event_t>?, timeout: Long): Int =
    zmq_poller_wait(poller, event, timeout)

@OptIn(ExperimentalForeignApi::class)
fun getHostname(name: CValuesRef<ByteVar>?, len: Int): Int =
    gethostname(name, len.toULong())
